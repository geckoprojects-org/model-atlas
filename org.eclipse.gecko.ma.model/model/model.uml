<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_2m-FwHWbEeSrSaxu8IGQmg" name="model">
  <packagedElement xmi:type="uml:Model" xmi:id="_CgTrQHWcEeSrSaxu8IGQmg" name="generated">
    <packagedElement xmi:type="uml:Package" xmi:id="_CgTrQXWcEeSrSaxu8IGQmg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_CgTrQnWcEeSrSaxu8IGQmg" name="measure">
        <packagedElement xmi:type="uml:Interface" xmi:id="_CgTrQ3WcEeSrSaxu8IGQmg" name="Quantity">
          <ownedComment xmi:type="uml:Comment" xmi:id="_CgTrRHWcEeSrSaxu8IGQmg">
            <body>
 * &lt;p>
 * Represents a quantitative property of a phenomenon, body, or substance, that can be quantified by measurement. {@link javax.measure.quantity.Mass Mass}, time,
 * distance, heat, and angular separation are among the familiar examples of
 * quantitative properties.
 * &lt;/p>
 *
 * &lt;code> Unit&lt;Mass> pound = ... Quantity&lt;Length> size = ... Sensor&lt;Temperature>&lt;br>
 * thermometer = ... Vector3D&lt;Speed> aircraftSpeed = ... &lt;/code>
 * &lt;/p>
 * 
 * @implSpec
 * This interface places no restrictions on the mutability of implementations,
 * however immutability is strongly recommended.
 * All implementations must be {@link Comparable}.
 *
 * @param &lt;Q>
 *            The type of the quantity.
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:desruisseaux@users.sourceforge.net&quot;>Martin
 *         Desruisseaux&lt;/a>
 * @author &lt;a href=&quot;mailto:werner@uom.technology&quot;>Werner Keil&lt;/a>
 * @author &lt;a href=&quot;mailto:otaviopolianasantana@gmail.com&quot;>Otavio Santana&lt;/a>
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Quantity&quot;>Wikipedia: Quantity&lt;/a>
 * @see &lt;a href=&quot;http://martinfowler.com/eaaDev/quantity.html&quot;> Martin Fowler -
 *      Quantity&lt;/a>
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Conversion_of_units&quot;>Wikipedia:
 *      Conversion of units&lt;/a>
 * @see Measurement
 * @version 0.23, Date: 2014-11-26
 </body>
          </ownedComment>
          <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_8vfr4F_uEem_1YACnEtC1w" name="Scale">
            <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_BwncYF_vEem_1YACnEtC1w" name="ABSOLUTE"/>
            <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_DqiycF_vEem_1YACnEtC1w" name="RELATIVE"/>
          </nestedClassifier>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgTrRXWcEeSrSaxu8IGQmg" name="add">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgTrRnWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the sum of this {@code Quantity} with the one specified.
	 *
	 * @param that
	 *            the {@code Quantity} to be added.
	 * @return &lt;code>this + that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgTrR3WcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgTrSHWcEeSrSaxu8IGQmg" name="augend" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgTrSXWcEeSrSaxu8IGQmg" name="subtract">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgTrSnWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the difference between this {@code Quantity} and the one
	 * specified.
	 *
	 * @param that
	 *            the {@code Quantity} to be subtracted.
	 * @return &lt;code>this - that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx4HWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx4XWcEeSrSaxu8IGQmg" name="subtrahend" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx4nWcEeSrSaxu8IGQmg" name="divide">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgZx43WcEeSrSaxu8IGQmg">
              <body>
	 * Returns the product of this {@code Quantity} divided by the {@code Quantity}
	 * specified.
	 *
	 * @throws ClassCastException if the type of an element
     *         in the specified operation is incompatible with this
     *         quantity
     *         (&lt;a href=&quot;#optional-restrictions&quot;>optional&lt;/a>)
	 *
	 * @param that
	 *            the {@code Quantity} divisor.
	 * @return &lt;code>this / that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx5HWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx5XWcEeSrSaxu8IGQmg" name="divisor" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx53WcEeSrSaxu8IGQmg" name="divide">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgZx6HWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the product of this {@code Quantity} divided by the {@code Number}
	 * specified.
	 *
	 * @param that
	 *            the {@code Number} divisor.
	 * @return &lt;code>this / that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx6XWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx6nWcEeSrSaxu8IGQmg" name="divisor" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx63WcEeSrSaxu8IGQmg" name="multiply">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgZx7HWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the product of this {@code Quantity} with the one specified.
	 *
	 * @throws ClassCastException if the type of an element
     *         in the specified operation is incompatible with this
     *         quantity
     *         (&lt;a href=&quot;#optional-restrictions&quot;>optional&lt;/a>)
	 *
	 * @param that
	 *            the {@code Quantity} multiplier.
	 * @return &lt;code>this * that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx7XWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx7nWcEeSrSaxu8IGQmg" name="multiplier" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx73WcEeSrSaxu8IGQmg" name="multiply">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgZx8HWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the product of this {@code Quantity} with the {@code Number} value
	 * specified.
	 *
	 * @param that
	 *            the {@code Number} multiplier.
	 * @return &lt;code>this * that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx8XWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx8nWcEeSrSaxu8IGQmg" name="multiplier" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx83WcEeSrSaxu8IGQmg" name="inverse">
            <ownedComment xmi:type="uml:Comment" xmi:id="_CgZx9HWcEeSrSaxu8IGQmg">
              <body>
	 * Returns a {@code Quantity} whose unit is {@code unit.inverse()}.
	 *
	 * @return {@code Quantity with this.getUnit().inverse()}.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_CgZx9XWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_CgZx93WcEeSrSaxu8IGQmg" name="to">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Cgf4gHWcEeSrSaxu8IGQmg">
              <body>
     * Returns this {@code Quantity} converted into another (compatible) {@code Unit}.
     *
     * @param unit
     * @return the converted result.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4gXWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4gnWcEeSrSaxu8IGQmg" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Cgf4h3WcEeSrSaxu8IGQmg" name="asType">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Cgf4iHWcEeSrSaxu8IGQmg">
              <body>
	 * Casts this quantity to a parameterized unit of specified nature or throw a
	 * &lt;code>ClassCastException&lt;/code> if the dimension of the specified
	 * quantity and this measure unit's dimension do not match. For example:&lt;br/>
	 * &lt;code>
	 *     Quantity&lt;Length> length = BaseQuantity.of(&quot;2 km&quot;).asType(Length.class);
	 * &lt;/code>
	 * or
     * &lt;code>
     *      Quantity&lt;Speed> C = length.multiply(299792458).divide(second).asType(Speed.class);
     * &lt;/code>
     *
     * @param  &lt;T> The type of the quantity.
     * @param  type the quantity class identifying the nature of the quantity.
   	 * @return this quantity parameterized with the specified type.
	 * @throws ClassCastException
	 *             if the dimension of this unit is different from the specified
	 *             quantity dimension.
	 * @throws UnsupportedOperationException
	 *             if the specified quantity class does not have a public static
	 *             field named &quot;UNIT&quot; holding the SI unit for the quantity.
	 * @see Unit#asType(Class)
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4iXWcEeSrSaxu8IGQmg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4inWcEeSrSaxu8IGQmg" name="type" type="_Cgf4hnWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Cgf4i3WcEeSrSaxu8IGQmg" name="getValue">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Cgf4jHWcEeSrSaxu8IGQmg">
              <body>
	 * Returns the value of this {@code Quantity}.
	 *
	 * @return a value.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4jXWcEeSrSaxu8IGQmg" type="_CgZx5nWcEeSrSaxu8IGQmg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Cgf4jnWcEeSrSaxu8IGQmg" name="getUnit">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Cgf4j3WcEeSrSaxu8IGQmg">
              <body>
	 * Returns the unit of this {@code Quantity}.
	 *
	 * @return the unit (shall not be {@code null}).
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cgf4kHWcEeSrSaxu8IGQmg" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YDCVkF_vEem_1YACnEtC1w" name="getScale">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_zfN94F_vEem_1YACnEtC1w" type="_8vfr4F_uEem_1YACnEtC1w" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_V38FACReEeu_9PA9SBtI_Q" name="isEquivalentTo">
            <ownedComment xmi:type="uml:Comment" xmi:id="_V38FASReEeu_9PA9SBtI_Q">
              <body>
	 * Returns the product of this {@code Quantity} with the one specified.
	 *
	 * @throws ClassCastException if the type of an element
     *         in the specified operation is incompatible with this
     *         quantity
     *         (&lt;a href=&quot;#optional-restrictions&quot;>optional&lt;/a>)
	 *
	 * @param that
	 *            the {@code Quantity} multiplier.
	 * @return &lt;code>this * that&lt;/code>.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_V38FAiReEeu_9PA9SBtI_Q" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_V38FAyReEeu_9PA9SBtI_Q" name="multiplier" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_TlvjcCRfEeu_9PA9SBtI_Q" name="toSystemUnit">
            <ownedComment xmi:type="uml:Comment" xmi:id="_TlvjcSRfEeu_9PA9SBtI_Q">
              <body>
     * Returns this {@code Quantity} converted into another (compatible) {@code Unit}.
     *
     * @param unit
     * @return the converted result.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_TlvjciRfEeu_9PA9SBtI_Q" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f7Zh8HY5EeSqtc-Sb9aJnA" name="Unit">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir4HY5EeSqtc-Sb9aJnA">
            <body>
 * Represents a determinate {@linkplain Quantity quantity} (as of
 * length, time, heat, or value) adopted as a standard of measurement.
 *
 * &lt;p>It is helpful to think of instances of this class as recording the history
 * by which they are created. Thus, for example, the string {@code &quot;g/kg&quot;} (which
 * is a dimensionless unit) would result from invoking the method {@link #toString()}
 * on a unit that was created by dividing a gram unit by a kilogram unit.&lt;/p>
 *
 * &lt;p>This interface supports the multiplication of offsets units. The result is
 * usually a unit not convertible to its {@linkplain #getSystemUnit() system unit}.
 * Such units may appear in derivative quantities. For example Celsius per meter is
 * an unit of gradient, which is common in atmospheric and oceanographic research.&lt;/p>
 *
 * &lt;p>Units raised at non-integral powers are not supported. For example,
 * {@code LITRE.root(2)} raises an {@code ArithmeticException}, but
 * {@code HECTARE.root(2)} returns {@code HECTOMETRE} (100 metres).&lt;/p>
 *
 * &lt;p>Unit instances shall be immutable.&lt;/p>
 *
 * @param &lt;Q> The type of the quantity measured by this unit.
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:steve@unidata.ucar.edu&quot;>Steve Emmerson&lt;/a>
 * @author &lt;a href=&quot;mailto:martin.desruisseaux@geomatys.com&quot;>Martin Desruisseaux&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.15
 *
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Units_of_measurement&quot;>Wikipedia: Units of measurement&lt;/a>
 </body>
          </ownedComment>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir4XY5EeSqtc-Sb9aJnA" name="getSymbol">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir4nY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the symbol (if any) of this unit.
     * This method returns {@code null} if this unit has no specific symbol associated with.
     *
     * @return this unit symbol, or {@code null} if this unit has not
     *         specific symbol associated with (e.g. product of units).
     *
     * @see #toString()
     * @see UnitFormat
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir5HY5EeSqtc-Sb9aJnA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir5XY5EeSqtc-Sb9aJnA" name="getName">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir5nY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the name (if any) of this unit.
     * This method returns {@code null} if this unit has no specific name associated with.
     *
     * @return this unit name, or {@code null} if this unit has not
     *         specific name associated with (e.g. product of units).
     *
     * @see #toString()
     * @see UnitFormat
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir53Y5EeSqtc-Sb9aJnA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir6HY5EeSqtc-Sb9aJnA" name="getDimension">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir6XY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the dimension of this unit. Two units {@code u1} and {@code u2}
     * are {@linkplain #isCompatible(Unit) compatible} if and only if
     * {@code u1.getDimension().equals(u2.getDimension())}.
     *
     * @return the dimension of this unit.
     *
     * @see #isCompatible(Unit)
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir6nY5EeSqtc-Sb9aJnA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir63Y5EeSqtc-Sb9aJnA" name="getSystemUnit">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir7HY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir7XY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir7nY5EeSqtc-Sb9aJnA" name="getBaseUnits">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir73Y5EeSqtc-Sb9aJnA">
              <body>
     * Returns the base units and their exponent whose product is this unit,
     * or {@code null} if this unit is a base unit (not a product of existing units).
     *
     * @return the base units and their exponent making up this unit.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir8HY5EeSqtc-Sb9aJnA" type="_f682CnY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m1XY5EeSqtc-Sb9aJnA" name="inverse">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m1nY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the inverse of this unit.
     *
     * @return {@code 1 / this}
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m13Y5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir8XY5EeSqtc-Sb9aJnA" name="isCompatible">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir8nY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir9HY5EeSqtc-Sb9aJnA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir9XY5EeSqtc-Sb9aJnA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7ir9nY5EeSqtc-Sb9aJnA" name="asType">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7ir93Y5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7ir-HY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc4HY5EeSqtc-Sb9aJnA" name="type" type="_Cgf4hnWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7sc4XY5EeSqtc-Sb9aJnA" name="getConverterTo">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7sc4nY5EeSqtc-Sb9aJnA">
              <body>
     * Returns a converter of numeric values from this unit to another unit of same type.
     * This method performs the same work than {@link #getConverterToAny(Unit)} without
     * raising checked exception.
     *
     * @param  that the unit of same type to which to convert the numeric values.
     * @return the converter from this unit to {@code that} unit.
     * @throws UnconvertibleException if a converter cannot be constructed.
     *
     * @see #getConverterToAny(Unit)
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc5HY5EeSqtc-Sb9aJnA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc5XY5EeSqtc-Sb9aJnA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7sc5nY5EeSqtc-Sb9aJnA" name="getConverterToAny">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7sc53Y5EeSqtc-Sb9aJnA">
              <body>
     * Returns a converter from this unit to the specified unit of type unknown.
     * This method can be used when the quantity type of the specified unit
     * is unknown at compile-time or when dimensional analysis allows for
     * conversion between units of different type.
     *
     * &lt;p>To convert to a unit having the same parameterized type,
     * {@link #getConverterTo(Unit)} is preferred (no checked exception raised).&lt;/p>
     *
     * @param  that the unit to which to convert the numeric values.
     * @return the converter from this unit to {@code that} unit.
     * @throws IncommensurableException if this unit is not
     *         {@linkplain #isCompatible(Unit) compatible} with {@code that}Â unit.
     * @throws UnconvertibleException if a converter cannot be constructed.
     *
     * @see #getConverterTo(Unit)
     * @see #isCompatible(Unit)
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc6HY5EeSqtc-Sb9aJnA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc6XY5EeSqtc-Sb9aJnA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7sc6nY5EeSqtc-Sb9aJnA" name="alternate">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7sc63Y5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc7HY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc7XY5EeSqtc-Sb9aJnA" name="symbol" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m2HY5EeSqtc-Sb9aJnA" name="divide_double">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m2XY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m2nY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m23Y5EeSqtc-Sb9aJnA" name="divisor" type="_f7sc7nY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_BCQ2oHQ9EemkGNry2_5b9w" name="divide_num">
            <ownedComment xmi:type="uml:Comment" xmi:id="_BCQ2oXQ9EemkGNry2_5b9w">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_BCQ2onQ9EemkGNry2_5b9w" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_BCQ2o3Q9EemkGNry2_5b9w" name="divisor" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m3HY5EeSqtc-Sb9aJnA" name="divide">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m3XY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the quotient of this unit with the one specified.
     *
     * @param  that the unit divisor.
     * @return {@code this / that}
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m3nY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m33Y5EeSqtc-Sb9aJnA" name="divisor" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7sc83Y5EeSqtc-Sb9aJnA" name="multiply_double">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7sc9HY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc9XY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m0HY5EeSqtc-Sb9aJnA" name="multiplier" type="_f7sc7nY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_5kUJQHQ6EemkGNry2_5b9w" name="multiply_num">
            <ownedComment xmi:type="uml:Comment" xmi:id="_5kUJQXQ6EemkGNry2_5b9w">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5kUJQnQ6EemkGNry2_5b9w" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_5kUJQ3Q6EemkGNry2_5b9w" name="multiplier" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m0XY5EeSqtc-Sb9aJnA" name="multiply">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m0nY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the product of this unit with the one specified.
     *
     * @param  that the unit multiplicand.
     * @return {@code this * that}
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m03Y5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m1HY5EeSqtc-Sb9aJnA" name="multiplier" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m5HY5EeSqtc-Sb9aJnA" name="pow">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m5XY5EeSqtc-Sb9aJnA">
              <body>
     * Returns a unit equals to this unit raised to an exponent.
     *
     * @param  n the exponent.
     * @return the result of raising this unit to the exponent.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7_X0HY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7_X0XY5EeSqtc-Sb9aJnA" name="n" type="_f6zFDHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f71m4HY5EeSqtc-Sb9aJnA" name="root">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f71m4XY5EeSqtc-Sb9aJnA">
              <body>
     * Returns a unit equals to the given root of this unit.
     *
     * @param  n the root's order.
     * @return the result of taking the given root of this unit.
     * @throws ArithmeticException if {@code n == 0} or if this operation
     *         would result in an unit with a fractional exponent.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m4nY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f71m43Y5EeSqtc-Sb9aJnA" name="n" type="_f6zFDHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7sc73Y5EeSqtc-Sb9aJnA" name="shift">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7sc8HY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc8XY5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7sc8nY5EeSqtc-Sb9aJnA" name="offset" type="_f7sc7nY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_GCKxEHQ7EemkGNry2_5b9w" name="shift_num">
            <ownedComment xmi:type="uml:Comment" xmi:id="_GCKxEXQ7EemkGNry2_5b9w">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GCKxEnQ7EemkGNry2_5b9w" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_GCKxE3Q7EemkGNry2_5b9w" name="offset" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_YROScHLlEeilgvRHPaOOsg" name="prefix">
            <ownedComment xmi:type="uml:Comment" xmi:id="_YROScXLlEeilgvRHPaOOsg">
              <body>
     * Returns a unit equals to this unit raised to an exponent.
     *
     * @param  n the exponent.
     * @return the result of raising this unit to the exponent.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YROScnLlEeilgvRHPaOOsg" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_YROSc3LlEeilgvRHPaOOsg" name="prefix" type="_il06sHC0EeiPSP_DaMvzsA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7_X1XY5EeSqtc-Sb9aJnA" name="transform">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7_X1nY5EeSqtc-Sb9aJnA">
              <body>
	 * Returns the unit derived from this unit using the specified converter.
	 * The converter does not need to be linear. For example:&lt;br>
	 * &lt;code>
	 *     Unit&lt;Dimensionless> DECIBEL = Unit.ONE.transform(
	 *         new LogConverter(10).inverse().concatenate(
	 *             new RationalConverter(1, 10)));
	 * &lt;/code>
	 *
	 * @param  operation the converter from the transformed unit to this unit.
	 * @return the unit after the specified transformation.
	 </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7_X13Y5EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7_X2HY5EeSqtc-Sb9aJnA" name="converter" type="_f8JI0HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f7_X0nY5EeSqtc-Sb9aJnA" name="toString">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7_X03Y5EeSqtc-Sb9aJnA">
              <body>
     * Returns a string representation of this unit. The string representation may
     * be the unit {@linkplain #getSymbol() symbol}, or may be some representation
     * of {@linkplain #getBaseUnits() base units}, multiplication factor and
     * offset if any. The string may be localized at implementation choice.
     *
     * @return the (eventually localized) string representation of this unit.
     *
     * @see #getSymbol()
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f7_X1HY5EeSqtc-Sb9aJnA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_cXMTUCRREeu_9PA9SBtI_Q" name="isEquivalentTo">
            <ownedComment xmi:type="uml:Comment" xmi:id="_cXMTUSRREeu_9PA9SBtI_Q">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cXMTUiRREeu_9PA9SBtI_Q" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_cXMTUyRREeu_9PA9SBtI_Q" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f6zFAHY5EeSqtc-Sb9aJnA" name="Dimension">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f6zFAXY5EeSqtc-Sb9aJnA">
            <body>
 * Represents the dimension of a unit.
 *
 * &lt;p>Concrete dimensions are obtained through the {@link Unit#getDimension()} method.&lt;/p>
 *
 * &lt;p>Two units {@code u1} and {@code u2} are {@linkplain Unit#isCompatible(Unit) compatible}
 * if and only if {@code u1.getDimension().equals(u2.getDimension())}.&lt;/p>
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.12
 *
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Dimensional_analysis&quot;>Wikipedia: Dimensional Analysis&lt;/a>
 </body>
          </ownedComment>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f6zFAnY5EeSqtc-Sb9aJnA" name="multiply">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f6zFA3Y5EeSqtc-Sb9aJnA">
              <body>
     * Returns the product of this dimension with the one specified.
     *
     * @param  that the dimension multiplicand.
     * @return {@code this * that}
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f6zFBHY5EeSqtc-Sb9aJnA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f6zFBXY5EeSqtc-Sb9aJnA" name="multiplier" type="_f6zFAHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f6zFBnY5EeSqtc-Sb9aJnA" name="divide">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f6zFB3Y5EeSqtc-Sb9aJnA">
              <body>
     * Returns the quotient of this dimension with the one specified.
     *
     * @param  that the dimension divisor.
     * @return {@code this / that}
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f6zFCHY5EeSqtc-Sb9aJnA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f6zFCXY5EeSqtc-Sb9aJnA" name="divisor" type="_f6zFAHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f6zFDXY5EeSqtc-Sb9aJnA" name="pow">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f682AHY5EeSqtc-Sb9aJnA">
              <body>
     * Returns this dimension raised to an exponent.
     * &lt;tt>(this&lt;sup>n&lt;/sup>)&lt;/tt>
     *
     * @param  n power to raise this {@code Dimension} to.
     * @return &lt;tt>this&lt;sup>n&lt;/sup>&lt;/tt>
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f682AXY5EeSqtc-Sb9aJnA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f682AnY5EeSqtc-Sb9aJnA" name="n" type="_f6zFDHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f682A3Y5EeSqtc-Sb9aJnA" name="root">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f682BHY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the given root of this dimension.
     *
     * @param  n the root's order.
     * @return the result of taking the given root of this dimension.
     * @throws ArithmeticException if {@code n == 0}.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f682BXY5EeSqtc-Sb9aJnA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f682BnY5EeSqtc-Sb9aJnA" name="n" type="_f6zFDHY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f682B3Y5EeSqtc-Sb9aJnA" name="getBaseDimensions">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f682CHY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the fundamental dimensions and their exponent whose product is
     * this dimension, or {@code null} if this dimension is a fundamental dimension.
     *
     * @return the mapping between the fundamental dimensions and their exponent.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f682C3Y5EeSqtc-Sb9aJnA" type="_f682CnY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_il06sHC0EeiPSP_DaMvzsA" name="Prefix">
          <ownedOperation xmi:type="uml:Operation" xmi:id="_Ru1Y8HLkEeilgvRHPaOOsg" name="getName">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Ru1Y8XLkEeilgvRHPaOOsg">
              <body>
     * Returns the symbol (if any) of this unit.
     * This method returns {@code null} if this unit has no specific symbol associated with.
     *
     * @return this unit symbol, or {@code null} if this unit has not
     *         specific symbol associated with (e.g. product of units).
     *
     * @see #toString()
     * @see UnitFormat
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ru1Y8nLkEeilgvRHPaOOsg" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_H_1-4J3hEem65Yu6xvelSQ" name="getSymbol">
            <ownedComment xmi:type="uml:Comment" xmi:id="_H_1-4Z3hEem65Yu6xvelSQ">
              <body>
     * Returns the symbol (if any) of this unit.
     * This method returns {@code null} if this unit has no specific symbol associated with.
     *
     * @return this unit symbol, or {@code null} if this unit has not
     *         specific symbol associated with (e.g. product of units).
     *
     * @see #toString()
     * @see UnitFormat
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_H_1-4p3hEem65Yu6xvelSQ" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_qCJL0HLkEeilgvRHPaOOsg" name="getValue">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_ue7gMHLkEeilgvRHPaOOsg" name="int" type="_CgZx5nWcEeSrSaxu8IGQmg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_AP61kHLlEeilgvRHPaOOsg" name="getExponent">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_AP7coHLlEeilgvRHPaOOsg" name="int" type="_f6zFDHY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f682DHY5EeSqtc-Sb9aJnA" name="IncommensurableException">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f682DXY5EeSqtc-Sb9aJnA">
            <body>
 * Signals that a problem of some sort has occurred due to incommensurable of
 * some quantities/units. Only commensurable quantity (quantities with the same
 * dimensions) may be compared, equated, added, or subtracted. Also, one unit
 * can be converted to another unit only if both units are commensurable.
 * &lt;p>
 * This is a &lt;strong>checked&lt;/strong> exception, so it deliberately doesn't
 * inherit from &lt;code>MeasurementException&lt;/code> like most other exceptions.
 * &lt;/p>
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.15, $Date: 2014-06-28 $
 *
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Unit_commensurability#Commensurability&quot;>Wikipedia: Unit Commensurability&lt;/a>
 </body>
          </ownedComment>
          <generalization xmi:type="uml:Generalization" xmi:id="_f682D3Y5EeSqtc-Sb9aJnA" general="_f682DnY5EeSqtc-Sb9aJnA"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f7F_8HY5EeSqtc-Sb9aJnA" name="MeasurementException">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f7F_8XY5EeSqtc-Sb9aJnA">
            <body>
 * Exception thrown when errors occur during measurement operations.
 *
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.5, $Date: 2014-06-28 $
 *
 </body>
          </ownedComment>
          <generalization xmi:type="uml:Generalization" xmi:id="_f7F_83Y5EeSqtc-Sb9aJnA" general="_f7F_8nY5EeSqtc-Sb9aJnA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_f7F_9XY5EeSqtc-Sb9aJnA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_f7F_9HY5EeSqtc-Sb9aJnA" isUnique="false">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7F_9nY5EeSqtc-Sb9aJnA">
              <body>
     * For cross-version compatibility.
     </body>
            </ownedComment>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_f7F_8nY5EeSqtc-Sb9aJnA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_f7Pw8HY5EeSqtc-Sb9aJnA" name="UnconvertibleException">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f7Pw8XY5EeSqtc-Sb9aJnA">
            <body>
 * Signals that a problem of some sort has occurred due to the impossibility of
 * constructing a converter between two units. For example, the multiplication of
 * offset units are usually units not convertible to their {@linkplain Unit#getSystemUnit()
 * system unit}.
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.4, 2014-06-10
 *
 </body>
          </ownedComment>
          <generalization xmi:type="uml:Generalization" xmi:id="_f7Pw8nY5EeSqtc-Sb9aJnA" general="_f7F_8HY5EeSqtc-Sb9aJnA"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_f7Pw83Y5EeSqtc-Sb9aJnA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_f7F_9HY5EeSqtc-Sb9aJnA" isUnique="false">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f7Pw9HY5EeSqtc-Sb9aJnA">
              <body>
     * For cross-version compatibility.
     </body>
            </ownedComment>
          </ownedAttribute>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f8JI0HY5EeSqtc-Sb9aJnA" name="UnitConverter">
          <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI0XY5EeSqtc-Sb9aJnA">
            <body>
 * A converter of numeric values between different units.
 *
 * &lt;p>Instances of this class are obtained through the {@link Unit#getConverterTo(Unit)} method.&lt;/p>
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.7.1, 2014-09-07
 *
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Conversion_of_units&quot;> Wikipedia:
 *      Conversion of units&lt;/a>
 </body>
          </ownedComment>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8JI0nY5EeSqtc-Sb9aJnA" name="isIdentity">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI03Y5EeSqtc-Sb9aJnA">
              <body>
     * Indicates if this converter is an identity converter.
     * The identity converter returns its input argument ({@code convert(x) == x}).
     *
     * @return {@code true} if this converter is an identity converter.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI1HY5EeSqtc-Sb9aJnA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8JI1XY5EeSqtc-Sb9aJnA" name="isLinear">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI1nY5EeSqtc-Sb9aJnA">
              <body xsi:nil="true"/>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI13Y5EeSqtc-Sb9aJnA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8JI2HY5EeSqtc-Sb9aJnA" name="inverse">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI2XY5EeSqtc-Sb9aJnA">
              <body>
     * Returns the inverse of this converter. If {@code x} is a valid value,
     * then {@code x == inverse().convert(convert(x))} to within the accuracy
     * of computer arithmetic.
     *
     * @return the inverse of this converter.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI2nY5EeSqtc-Sb9aJnA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8JI23Y5EeSqtc-Sb9aJnA" name="convert">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI3HY5EeSqtc-Sb9aJnA">
              <body>
     * Converts a {@code Number} value.
     *
     * @param  value the {@code Number} value to convert.
     * @return the {@code Number} value after conversion.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI3XY5EeSqtc-Sb9aJnA" type="_CgZx5nWcEeSrSaxu8IGQmg" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI3nY5EeSqtc-Sb9aJnA" name="value" type="_CgZx5nWcEeSrSaxu8IGQmg"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8JI33Y5EeSqtc-Sb9aJnA" name="convert">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8JI4HY5EeSqtc-Sb9aJnA">
              <body>
     * Converts a {@code double} value.
     *
     * @param  value the numeric value to convert.
     * @return the {@code double} value after conversion.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI4XY5EeSqtc-Sb9aJnA" type="_f7sc7nY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8JI4nY5EeSqtc-Sb9aJnA" name="value" type="_f7sc7nY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8SSwHY5EeSqtc-Sb9aJnA" name="concatenate">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8SSwXY5EeSqtc-Sb9aJnA">
              <body>
     * Concatenates this converter with another converter. The resulting
     * converter is equivalent to first converting by the specified converter
     * (right converter), and then converting by this converter (left converter).
     *
     * @param  converter the other converter to concatenate with this converter.
     * @return the concatenation of this converter with the other converter.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8SSwnY5EeSqtc-Sb9aJnA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8SSw3Y5EeSqtc-Sb9aJnA" name="converter" type="_f8JI0HY5EeSqtc-Sb9aJnA"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_f8SSxHY5EeSqtc-Sb9aJnA" name="getConversionSteps">
            <ownedComment xmi:type="uml:Comment" xmi:id="_f8SSxXY5EeSqtc-Sb9aJnA">
              <body>
     * &lt;p>Returns the steps of fundamental converters making up this converter or
     * {@code this} if the converter is a fundamental converter.&lt;/p>
     * &lt;p>
     * For example, {@code converter1.getConversionSteps()} returns {@code {converter1} while {@code converter1.concatenate(converter2).getConversionSteps()} returns {@code {converter1, converter2}.&lt;/p>
     * @return the list of fundamental converters which concatenated make up this converter.
     </body>
            </ownedComment>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_f8SSx3Y5EeSqtc-Sb9aJnA" type="_f8SSxnY5EeSqtc-Sb9aJnA" direction="return">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f8SSyHY5EeSqtc-Sb9aJnA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f8SSyXY5EeSqtc-Sb9aJnA" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_N70hgHY6EeSqtc-Sb9aJnA" name="format">
          <packagedElement xmi:type="uml:Class" xmi:id="_N70hgnY6EeSqtc-Sb9aJnA" name="I"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_N70hhXY6EeSqtc-Sb9aJnA" name="O"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_N70hiHY6EeSqtc-Sb9aJnA" name="ParserException">
            <ownedComment xmi:type="uml:Comment" xmi:id="_N70hiXY6EeSqtc-Sb9aJnA">
              <body>
 * Signals that an error has been reached unexpectedly while parsing.
 * 
 * @author Werner Keil
 * @version 0.4, $Date: 2014-08-04 $
 </body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_N70hinY6EeSqtc-Sb9aJnA" general="_f7F_8HY5EeSqtc-Sb9aJnA"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_N70hi3Y6EeSqtc-Sb9aJnA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_f7F_9HY5EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N70hjHY6EeSqtc-Sb9aJnA">
                <body>
	 * 
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_N70hjnY6EeSqtc-Sb9aJnA" name="position" visibility="private" type="_N70hjXY6EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79rcHY6EeSqtc-Sb9aJnA">
                <body>
	 * The zero-based character position in the string being parsed at which the
	 * error was found while parsing.
	 * 
	 * @serial
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_N79rcnY6EeSqtc-Sb9aJnA" name="data" visibility="private" type="_N79rcXY6EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79rc3Y6EeSqtc-Sb9aJnA">
                <body> The original input data. </body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_N79rdHY6EeSqtc-Sb9aJnA" name="getPosition" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79rdXY6EeSqtc-Sb9aJnA">
                <body>
	 * Returns the position where the error was found.
	 * 
	 * @return the position of the error
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79rdnY6EeSqtc-Sb9aJnA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_N79rd3Y6EeSqtc-Sb9aJnA" name="getParsedString" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79reHY6EeSqtc-Sb9aJnA">
                <body>
	 * Returns the string that was being parsed.
	 * 
	 * @return the parsed string, or {@code null}, if {@code null} was passed as
	 *         input.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79reXY6EeSqtc-Sb9aJnA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_N79renY6EeSqtc-Sb9aJnA" name="UnitFormat">
            <ownedComment xmi:type="uml:Comment" xmi:id="_N79re3Y6EeSqtc-Sb9aJnA">
              <body>
 * Formatting and parsing of {@code Unit} instances.
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.4
 *
 * @see Unit
 * @see Parser
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_N79rfnY6EeSqtc-Sb9aJnA" name="format">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79rf3Y6EeSqtc-Sb9aJnA">
                <body>
     * Formats the specified unit.
     *
     * @param  unit the unit to format.
     * @param  appendable the appendable destination.
     * @return the appendable destination passed in with formatted text appended.
     * @throws IOException if an error occurs while writing to the destination.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79rgHY6EeSqtc-Sb9aJnA" type="_N79rfXY6EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79rgXY6EeSqtc-Sb9aJnA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79rgnY6EeSqtc-Sb9aJnA" name="appendable" type="_N79rfXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_wiRrcIfnEeWIX-YU2rOOwg" name="format">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_QDRXkIfpEeWSAJVqrs5hGQ" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_TAFG8IfpEeWSAJVqrs5hGQ" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_N79rg3Y6EeSqtc-Sb9aJnA" name="parse">
              <ownedComment xmi:type="uml:Comment" xmi:id="_N79rhHY6EeSqtc-Sb9aJnA">
                <body>
     * Parses a portion of the specified {@code CharSequence} from the
     * specified position to produce a unit. If there is no unit to parse
     * the unitary unit (dimensionless) is returned.
     *
     * @param  csq the {@code CharSequence} to parse.
     * @return the unit parsed from the specified character sub-sequence.
     * @throws ParserException if any problem occurs while parsing the
     *         specified character sequence (e.g. illegal syntax).
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N79rhXY6EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8HccHY6EeSqtc-Sb9aJnA" name="csq" type="_N79rcXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_DaY_kK1TEeiRkapsR2a9pg" name="parse">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_TD0LgK1TEeiRkapsR2a9pg" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_cdtTEK1TEeiRkapsR2a9pg" name="csq" type="_N79rcXY6EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_eaGuUK1TEeiRkapsR2a9pg" name="cursor" type="_P7W6EHLtEeilgvRHPaOOsg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_f-R_kIflEeWIX-YU2rOOwg" name="label">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_wIRFcIfmEeWIX-YU2rOOwg" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_2KYY4IfmEeWIX-YU2rOOwg" name="label" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_ALppgIfnEeWIX-YU2rOOwg" name="isLocaleSensitive">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzYUUIfnEeWIX-YU2rOOwg" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Eh9OUHLsEeilgvRHPaOOsg" name="MeasurementParseException">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OUXLsEeilgvRHPaOOsg">
              <body>
 * Signals that an error has been reached unexpectedly while parsing.
 * 
 * @author Werner Keil
 * @version 0.4, $Date: 2014-08-04 $
 </body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_Eh9OUnLsEeilgvRHPaOOsg" general="_f7F_8HY5EeSqtc-Sb9aJnA"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Eh9OU3LsEeilgvRHPaOOsg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_f7F_9HY5EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OVHLsEeilgvRHPaOOsg">
                <body>
	 * 
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Eh9OVXLsEeilgvRHPaOOsg" name="position" visibility="private" type="_N70hjXY6EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OVnLsEeilgvRHPaOOsg">
                <body>
	 * The zero-based character position in the string being parsed at which the
	 * error was found while parsing.
	 * 
	 * @serial
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_Eh9OV3LsEeilgvRHPaOOsg" name="data" visibility="private" type="_N79rcXY6EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OWHLsEeilgvRHPaOOsg">
                <body> The original input data. </body>
              </ownedComment>
            </ownedAttribute>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Eh9OWXLsEeilgvRHPaOOsg" name="getPosition" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OWnLsEeilgvRHPaOOsg">
                <body>
	 * Returns the position where the error was found.
	 * 
	 * @return the position of the error
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Eh9OW3LsEeilgvRHPaOOsg" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Eh9OXHLsEeilgvRHPaOOsg" name="getParsedString" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Eh9OXXLsEeilgvRHPaOOsg">
                <body>
	 * Returns the string that was being parsed.
	 * 
	 * @return the parsed string, or {@code null}, if {@code null} was passed as
	 *         input.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Eh9OXnLsEeilgvRHPaOOsg" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_U-AxEHLsEeilgvRHPaOOsg" name="QuantityFormat">
            <ownedComment xmi:type="uml:Comment" xmi:id="_U-AxEXLsEeilgvRHPaOOsg">
              <body>&#xD;
 * Formatting and parsing of {@code Quantity} instances.&#xD;
 *&#xD;
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>&#xD;
 * @version 0.3&#xD;
 * @since 2.0&#xD;
 *&#xD;
 * @see Quantity&#xD;
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_U-AxEnLsEeilgvRHPaOOsg" name="format">
              <ownedComment xmi:type="uml:Comment" xmi:id="_U-AxE3LsEeilgvRHPaOOsg">
                <body>
     * Formats the specified unit.
     *
     * @param  unit the unit to format.
     * @param  appendable the appendable destination.
     * @return the appendable destination passed in with formatted text appended.
     * @throws IOException if an error occurs while writing to the destination.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxFHLsEeilgvRHPaOOsg" type="_N79rfXY6EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxFXLsEeilgvRHPaOOsg" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxFnLsEeilgvRHPaOOsg" name="appendable" type="_N79rfXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_U-AxF3LsEeilgvRHPaOOsg" name="parse">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxGHLsEeilgvRHPaOOsg" name="csq" type="_N79rcXY6EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_CdfmwHLtEeilgvRHPaOOsg" name="cursor" type="_P7W6EHLtEeilgvRHPaOOsg"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxGXLsEeilgvRHPaOOsg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_U-AxGnLsEeilgvRHPaOOsg" name="parse">
              <ownedComment xmi:type="uml:Comment" xmi:id="_U-AxG3LsEeilgvRHPaOOsg">
                <body>
     * Parses a portion of the specified {@code CharSequence} from the
     * specified position to produce a unit. If there is no unit to parse
     * the unitary unit (dimensionless) is returned.
     *
     * @param  csq the {@code CharSequence} to parse.
     * @return the unit parsed from the specified character sub-sequence.
     * @throws ParserException if any problem occurs while parsing the
     *         specified character sequence (e.g. illegal syntax).
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxHHLsEeilgvRHPaOOsg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxHXLsEeilgvRHPaOOsg" name="csq" type="_N79rcXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_U-AxIXLsEeilgvRHPaOOsg" name="isLocaleSensitive">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_U-AxInLsEeilgvRHPaOOsg" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_VizEgHY7EeSqtc-Sb9aJnA" name="spi">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Vi8OcHY7EeSqtc-Sb9aJnA" name="QuantityFactory">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8OcXY7EeSqtc-Sb9aJnA">
              <body>
 * Represents a factory that accepts {@linkplain Number} and {@link Unit} arguments to create a {@link Quantity} result.
 *
 * &lt;p>This is a &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html#package.description&quot;>functional interface&lt;/a>
 * whose functional method is {@link #create(T, U)}.
 *
 * @param &lt;Q> the type of the {@link Quantity} result
 *
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @author &lt;a href=&quot;mailto:otaviopolianasantana@gmail.com&quot;>Otavio Santana&lt;/a>
 * @version 0.5, $Date: 2014-09-18 $
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vi8OdHY7EeSqtc-Sb9aJnA" name="create">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8OdXY7EeSqtc-Sb9aJnA">
                <body>
     * Returns the quantity for the specified number stated in the specified unit.
     *
     * @param number the numeric value stated in the specified unit
     * @param unit the unit
     * @return the corresponding quantity
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OdnY7EeSqtc-Sb9aJnA" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8Od3Y7EeSqtc-Sb9aJnA" name="number" type="_Vi8OcnY7EeSqtc-Sb9aJnA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OeHY7EeSqtc-Sb9aJnA" name="unit" type="_Vi8Oc3Y7EeSqtc-Sb9aJnA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Vi8OcnY7EeSqtc-Sb9aJnA" name="N"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Vi8Oc3Y7EeSqtc-Sb9aJnA" name="U"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Vi8OeXY7EeSqtc-Sb9aJnA" name="SystemOfUnits">
            <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8OenY7EeSqtc-Sb9aJnA">
              <body>
 * A system of units grouped together for historical or cultural reasons.
 * Nothing prevents a unit from belonging to several systems of units at the
 * same time (for example an {@code Imperial} system would have many of the
 * units held by {@code US} customary system).
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.7, $Date: 2014-11-04 $
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/International_System_of_Units&quot;>
 *      Wikipedia: International System of Units&lt;/a>
 * @see &lt;a href=&quot;http://en.wikipedia.org/wiki/Systems_of_measurement&quot;>
 *      Wikipedia: System of measurement&lt;/a>
 *
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vi8Oe3Y7EeSqtc-Sb9aJnA" name="getName">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8OfHY7EeSqtc-Sb9aJnA">
                <body>
	 * @return a name
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OfXY7EeSqtc-Sb9aJnA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vi8OfnY7EeSqtc-Sb9aJnA" name="getUnit">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8Of3Y7EeSqtc-Sb9aJnA">
                <body>
	 * Returns the default unit for the specified quantity.
	 *
	 * @param &lt;Q>
	 *            the compile-time quantity type.
	 * @param quantityType
	 *            the quantity type.
	 * @return the unit for the specified quantity.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OgHY7EeSqtc-Sb9aJnA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OgXY7EeSqtc-Sb9aJnA" name="quantityType" type="_Cgf4hnWcEeSrSaxu8IGQmg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vi8OgnY7EeSqtc-Sb9aJnA" name="getUnits">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Vi8Og3Y7EeSqtc-Sb9aJnA">
                <body>
	 * Returns a read only view over the units defined in this system.
	 *
	 * @return the collection of units.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Vi8OhXY7EeSqtc-Sb9aJnA" type="_Vi8OhHY7EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Vi8OhnY7EeSqtc-Sb9aJnA" name="getUnits">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_cHY7EeSqtc-Sb9aJnA">
                <body>
	 * Returns the units defined in this system having the specified dimension
	 * (convenience method).
	 *
	 * @param dimension
	 *            the dimension of the units to be returned.
	 * @return the collection of units of specified dimension.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_cXY7EeSqtc-Sb9aJnA" type="_Vi8OhHY7EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_cnY7EeSqtc-Sb9aJnA" name="dimension" type="_f6zFAHY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_EvR4oHVdEeiMCukaGwBIrQ" name="getUnit">
              <ownedComment xmi:type="uml:Comment" xmi:id="_EvR4oXVdEeiMCukaGwBIrQ">
                <body>
	 * Returns the default unit for the specified quantity.
	 *
	 * @param &lt;Q>
	 *            the compile-time quantity type.
	 * @param quantityType
	 *            the quantity type.
	 * @return the unit for the specified quantity.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EvR4onVdEeiMCukaGwBIrQ" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_EvR4o3VdEeiMCukaGwBIrQ" name="string" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_VjF_c3Y7EeSqtc-Sb9aJnA" name="SystemOfUnitsService">
            <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_dHY7EeSqtc-Sb9aJnA">
              <body>
 * &lt;p>
 * This interface represents the service to obtain a {@link SystemOfUnits system
 * of units}.
 * &lt;/p>
 * 
 * &lt;p>
 * Common system of units are &quot;SI&quot; (System International), &quot;Imperial&quot; (British),
 * &quot;USCustomary&quot;.
 * &lt;/p>
 * 
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 1.4 ($Revision: 257 $), $Date: 2013-09-20 01:05:19 +0200 (Fr, 20 Sep 2013) $
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjF_dXY7EeSqtc-Sb9aJnA" name="getSystemOfUnits">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_dnY7EeSqtc-Sb9aJnA">
                <body>
	 * Returns the default &lt;a
	 * href=http://en.wikipedia.org/wiki/International_System_of_Units&quot;>
	 * International System of Units&lt;/a>.
	 * 
	 * @return &lt;code>getSystemOfUnits(&quot;SI&quot;)&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_d3Y7EeSqtc-Sb9aJnA" type="_Vi8OeXY7EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjF_eHY7EeSqtc-Sb9aJnA" name="getSystemOfUnits">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_eXY7EeSqtc-Sb9aJnA">
                <body>
     * Returns the system of units having the specified name or
     * &lt;code>null&lt;/code> if none.
     *
     * @param name the system of unit name.
     * @return the system of units.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_enY7EeSqtc-Sb9aJnA" type="_Vi8OeXY7EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_e3Y7EeSqtc-Sb9aJnA" name="name" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_VjF_fHY7EeSqtc-Sb9aJnA" name="UnitFormatService">
            <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_fXY7EeSqtc-Sb9aJnA">
              <body>
 * &lt;p>
 * This interface represent the service to obtain {@link UnitFormat} instances.
 * &lt;/p>
 * 
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @see &lt;a href=&quot;http://aurora.regenstrief.org/~ucum/ucum.html&quot;>UCUM Full
 *      Specification&lt;/a>
 * @version 0.4, $Date: 2014-07-22 $
 </body>
            </ownedComment>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjF_fnY7EeSqtc-Sb9aJnA" name="getUnitFormat">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_f3Y7EeSqtc-Sb9aJnA">
                <body>
     * Returns the default &lt;a href=&quot;http://www.unitsofmeasure.org/&quot;>UCUM&lt;/a>
     * unit format.
     *
     * @return &lt;code>getUnitFormat(&quot;UCUM&quot;)&lt;/code>
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_gHY7EeSqtc-Sb9aJnA" type="_N79renY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjF_gXY7EeSqtc-Sb9aJnA" name="getUnitFormat">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjF_gnY7EeSqtc-Sb9aJnA">
                <body>
     * Returns the unit format having the specified name or
     * &lt;code>null&lt;/code> if none.
     *
     * @param name the name of the format.
     * @return the corresponding unit format.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_g3Y7EeSqtc-Sb9aJnA" type="_N79renY6EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjF_hHY7EeSqtc-Sb9aJnA" name="name" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_VjPJYHY7EeSqtc-Sb9aJnA" name="getUnitFormat">
              <ownedComment xmi:type="uml:Comment" xmi:id="_VjPJYXY7EeSqtc-Sb9aJnA">
                <body>
     * Returns the unit format for the specified locale or
     * &lt;code>null&lt;/code> if none.
     *
     * @param locale the locale for the format.
     * @return the corresponding unit format.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjPJYnY7EeSqtc-Sb9aJnA" type="_N79renY6EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_VjPJY3Y7EeSqtc-Sb9aJnA" name="locale" type="_VjF_hXY7EeSqtc-Sb9aJnA"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DeY8gHY-EeS0S_a4KNH9ow" name="tec">
      <packagedElement xmi:type="uml:Package" xmi:id="_Fj-I8HY-EeS0S_a4KNH9ow" name="units">
        <packagedElement xmi:type="uml:Package" xmi:id="_HletsHY-EeS0S_a4KNH9ow" name="ri">
          <packagedElement xmi:type="uml:Class" xmi:id="_J10YoHY-EeS0S_a4KNH9ow" name="AbstractSystemOfUnits" isAbstract="true">
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_XCU2MHY-EeS0S_a4KNH9ow" client="_J10YoHY-EeS0S_a4KNH9ow" supplier="_Vi8OeXY7EeSqtc-Sb9aJnA" contract="_Vi8OeXY7EeSqtc-Sb9aJnA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_jQHowHY-EeS0S_a4KNH9ow" name="util">
            <packagedElement xmi:type="uml:Class" xmi:id="_lPBlcHY-EeS0S_a4KNH9ow" name="SI">
              <generalization xmi:type="uml:Generalization" xmi:id="_4U1_wHY-EeS0S_a4KNH9ow" general="_J10YoHY-EeS0S_a4KNH9ow"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_m_2C0HY-EeS0S_a4KNH9ow" name="US">
              <generalization xmi:type="uml:Generalization" xmi:id="_453YYHY-EeS0S_a4KNH9ow" general="_J10YoHY-EeS0S_a4KNH9ow"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_omUc0HotEeSXuJ3Xp8vEhA" name="BinaryPrefix" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_omUc0XotEeSXuJ3Xp8vEhA">
                <body>
 * &lt;p> This class provides support for common binary prefixes to be used by
 *     units.&lt;/p>
 *
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 5.1, December 25, 2013
 </body>
              </ownedComment>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omUc0notEeSXuJ3Xp8vEhA" name="KIBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omUc03otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>10&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1024)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc1HotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc1XotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omUc1notEeSXuJ3Xp8vEhA" name="MEBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omUc13otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>20&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1048576)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc2HotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc2XotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omUc2notEeSXuJ3Xp8vEhA" name="GIBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omUc23otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>30&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1073741824)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc3HotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omUc3XotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omUc3notEeSXuJ3Xp8vEhA" name="TEBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omUc33otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>40&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1099511627776L)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajcHotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajcXotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omajcnotEeSXuJ3Xp8vEhA" name="PEBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omajc3otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>50&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1125899906842624L)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajdHotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajdXotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omajdnotEeSXuJ3Xp8vEhA" name="EXBI" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omajd3otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the specified unit multiplied by the factor
	 * &lt;code>2&lt;sup>60&lt;/sup>&lt;/code> (binary prefix).
	 * 
	 * @param unit any unit.
	 * @return &lt;code>unit.times(1152921504606846976L)&lt;/code>.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajeHotEeSXuJ3Xp8vEhA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omajeXotEeSXuJ3Xp8vEhA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_omajenotEeSXuJ3Xp8vEhA" name="QuantityRange">
              <ownedComment xmi:type="uml:Comment" xmi:id="_omaje3otEeSXuJ3Xp8vEhA">
                <body>
 * A Quantity Range is a pair of {@link Quantity} items that represent a range
 * of values.
 * &lt;p>
 * Range limits MUST be presented in the same scale and have the same unit as
 * measured data values.&lt;br/>
 * Subclasses of Range should be immutable.
 * 
 * @param &lt;T>
 *            The value of the range.
 * 
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.1, November 29, 2014
 * @see &lt;a
 *      href=&quot;http://www.botts-inc.com/SensorML_1.0.1/schemaBrowser/SensorML_QuantityRange.html&quot;>
 *      SensorML: QuantityRange&lt;/a>
 </body>
              </ownedComment>
              <generalization xmi:type="uml:Generalization" xmi:id="_omajfXotEeSXuJ3Xp8vEhA" general="_omajfHotEeSXuJ3Xp8vEhA"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_omajfnotEeSXuJ3Xp8vEhA" name="res" visibility="private" type="_CgTrQ3WcEeSrSaxu8IGQmg" isUnique="false"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omgqEHotEeSXuJ3Xp8vEhA" name="of" visibility="public" isStatic="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omgqEXotEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns an {@code Range} with the specified values.
	 *
	 * @param &lt;T>
	 *            the class of the value
	 * @param minimum
	 *            The minimum value for the measurement range.
	 * @param maximum
	 *            The maximum value for the measurement range.
	 * @param resolution
	 *            The resolution of the measurement range.
	 * @return an {@code MeasurementRange} with the given values
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqEnotEeSXuJ3Xp8vEhA" type="_omajenotEeSXuJ3Xp8vEhA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqE3otEeSXuJ3Xp8vEhA" name="minimum" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqFHotEeSXuJ3Xp8vEhA" name="maximum" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqFXotEeSXuJ3Xp8vEhA" name="resolution" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omgqFnotEeSXuJ3Xp8vEhA" name="getResolution" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_omgqF3otEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the resolution of the measurement range. The value is the same as
	 * that given as the constructor parameter for the largest value.
	 * 
	 * @return resolution of the range, the value is the same as that given as
	 *         the constructor parameter for the resolution
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqGHotEeSXuJ3Xp8vEhA" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omgqGXotEeSXuJ3Xp8vEhA" name="contains" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqGnotEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqG3otEeSXuJ3Xp8vEhA" name="q" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omgqHHotEeSXuJ3Xp8vEhA" name="equals" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqHXotEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqHnotEeSXuJ3Xp8vEhA" name="obj" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_omgqH3otEeSXuJ3Xp8vEhA" name="toString" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_omgqIHotEeSXuJ3Xp8vEhA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_omajfHotEeSXuJ3Xp8vEhA" name="Range" isAbstract="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_ommwsHotEeSXuJ3Xp8vEhA">
                <body>
 * A Range is a pair of &lt;code>T&lt;/code> items that represent a range
 * of values.
 * &lt;p>
 * Subclasses of Range should be immutable.
 * 
 * @param &lt;T>
 *            The value of the range.
 * 
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.8.8, November 29, 2014
 </body>
              </ownedComment>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ommwtnotEeSXuJ3Xp8vEhA" name="min" visibility="private" isLeaf="true" type="_ommwtXotEeSXuJ3Xp8vEhA" isUnique="false"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_ommwt3otEeSXuJ3Xp8vEhA" name="max" visibility="private" isLeaf="true" type="_ommwtXotEeSXuJ3Xp8vEhA" isUnique="false"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_ommwsnotEeSXuJ3Xp8vEhA" name="Range implements MinimumSupplier" client="_omajfHotEeSXuJ3Xp8vEhA" supplier="_ommwsXotEeSXuJ3Xp8vEhA" contract="_ommwsXotEeSXuJ3Xp8vEhA"/>
              <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_ommwtHotEeSXuJ3Xp8vEhA" name="Range implements MaximumSupplier" client="_omajfHotEeSXuJ3Xp8vEhA" supplier="_ommws3otEeSXuJ3Xp8vEhA" contract="_ommws3otEeSXuJ3Xp8vEhA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ommwuHotEeSXuJ3Xp8vEhA" name="getMinimum" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_ommwuXotEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the smallest value of the range. The value is the same as that
	 * given as the constructor parameter for the smallest value.
	 * 
	 * @return the minimum value
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ommwunotEeSXuJ3Xp8vEhA" type="_ommwtXotEeSXuJ3Xp8vEhA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ommwu3otEeSXuJ3Xp8vEhA" name="getMaximum" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_ommwvHotEeSXuJ3Xp8vEhA">
                  <body>
	 * Returns the largest value of the measurement range. The value is the same
	 * as that given as the constructor parameter for the largest value.
	 * 
	 * @return the maximum value
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ommwvXotEeSXuJ3Xp8vEhA" type="_ommwtXotEeSXuJ3Xp8vEhA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ommwvnotEeSXuJ3Xp8vEhA" name="hasMinimum" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_ommwv3otEeSXuJ3Xp8vEhA">
                  <body>
	 * Method to easily check if {@link #getMinimum()} is not {@code null}.
	 * 
	 * @return {@code true} if {@link #getMinimum()} is not {@code null} .
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ommwwHotEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ommwwXotEeSXuJ3Xp8vEhA" name="hasMaximum" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_ommwwnotEeSXuJ3Xp8vEhA">
                  <body>
	 * Method to easily check if {@link #getMaximum()} is not {@code null}.
	 * 
	 * @return {@code true} if {@link #getMaximum()} is not {@code null}.
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3UHotEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_oms3UXotEeSXuJ3Xp8vEhA" name="contains" visibility="public" isAbstract="true">
                <ownedComment xmi:type="uml:Comment" xmi:id="_oms3UnotEeSXuJ3Xp8vEhA">
                  <body>
	 * Checks whether the given &lt;code>T&lt;/code> is within this range
	 * @param t
	 * @return true if the value is within the range
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3U3otEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3VHotEeSXuJ3Xp8vEhA" name="t" type="_ommwtXotEeSXuJ3Xp8vEhA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_oms3VXotEeSXuJ3Xp8vEhA" name="equals" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3VnotEeSXuJ3Xp8vEhA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3V3otEeSXuJ3Xp8vEhA" name="obj" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_oms3WHotEeSXuJ3Xp8vEhA" name="hashCode" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3WXotEeSXuJ3Xp8vEhA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_oms3WnotEeSXuJ3Xp8vEhA" name="toString" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_oms3W3otEeSXuJ3Xp8vEhA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ommwtXotEeSXuJ3Xp8vEhA" name="T"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_fJXB4HonEeS9Gr9yPtn_zA" name="AbstractConverter" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_fJXB4XonEeS9Gr9yPtn_zA">
              <body>
 * &lt;p> The base class for our {@link UnitConverter} implementations.&lt;/p>
 *
 * @author  &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.7.1, $Date: 2014-09-18 $
 </body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fJdIgXonEeS9Gr9yPtn_zA" name="PI" visibility="protected" isLeaf="true" isStatic="true" type="_fJdIgHonEeS9Gr9yPtn_zA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fJdIgnonEeS9Gr9yPtn_zA">
                <body>
     * The ratio of the circumference of a circle to its diameter.
     *</body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fJdIg3onEeS9Gr9yPtn_zA" name="IDENTITY" visibility="public" isLeaf="true" isStatic="true" type="_fJXB4HonEeS9Gr9yPtn_zA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fJdIhHonEeS9Gr9yPtn_zA">
                <body>
     * Holds identity converter.
     </body>
              </ownedComment>
            </ownedAttribute>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fJXB4nonEeS9Gr9yPtn_zA" name="AbstractConverter implements UnitConverter" client="_fJXB4HonEeS9Gr9yPtn_zA" supplier="_f8JI0HY5EeSqtc-Sb9aJnA" contract="_f8JI0HY5EeSqtc-Sb9aJnA"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fJXB5XonEeS9Gr9yPtn_zA" name="AbstractConverter implements Converter" client="_fJXB4HonEeS9Gr9yPtn_zA" supplier="_fJXB5HonEeS9Gr9yPtn_zA" contract="_fJXB5HonEeS9Gr9yPtn_zA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJjPIHonEeS9Gr9yPtn_zA" name="concatenate" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fJjPIXonEeS9Gr9yPtn_zA">
                <body>
     * Concatenates this physics converter with another unit converter.
     * The resulting converter is equivalent to first converting by the
     * specified converter (right converter), and then converting by
     * this converter (left converter).
     *
     * @param that the other converter.
     * @return the concatenation of this converter with that converter.
     </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVwHonEeS9Gr9yPtn_zA" type="_fJXB4HonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVwXonEeS9Gr9yPtn_zA" name="that" type="_fJXB4HonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJpVwnonEeS9Gr9yPtn_zA" name="isIdentity" visibility="public">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVw3onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJpVxXonEeS9Gr9yPtn_zA" name="equals" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVxnonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVx3onEeS9Gr9yPtn_zA" name="cvtr" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJpVyHonEeS9Gr9yPtn_zA" name="hashCode" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJpVyXonEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJvcYHonEeS9Gr9yPtn_zA" name="inverse" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvcYXonEeS9Gr9yPtn_zA" type="_fJXB4HonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJvcYnonEeS9Gr9yPtn_zA" name="concatenate" visibility="public">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvcY3onEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvcZHonEeS9Gr9yPtn_zA" name="converter" type="_f8JI0HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJvcZXonEeS9Gr9yPtn_zA" name="getConversionSteps" visibility="public">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvcZnonEeS9Gr9yPtn_zA" type="_f8SSxnY5EeSqtc-Sb9aJnA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fJvcZ3onEeS9Gr9yPtn_zA"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fJvcaHonEeS9Gr9yPtn_zA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJvcanonEeS9Gr9yPtn_zA" name="convert" visibility="public">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvca3onEeS9Gr9yPtn_zA" type="_fJvcaXonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJvcbHonEeS9Gr9yPtn_zA" name="value" type="_fJvcaXonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ1jAHonEeS9Gr9yPtn_zA" name="convert" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jAXonEeS9Gr9yPtn_zA" type="_fJdIgHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jAnonEeS9Gr9yPtn_zA" name="value" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_fJ1jA3onEeS9Gr9yPtn_zA" name="Identity" visibility="private" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fJ1jBHonEeS9Gr9yPtn_zA">
                <body>
     * This class represents the identity converter (singleton).
     </body>
              </ownedComment>
              <generalization xmi:type="uml:Generalization" xmi:id="_fJ1jBXonEeS9Gr9yPtn_zA" general="_fJXB4HonEeS9Gr9yPtn_zA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ1jBnonEeS9Gr9yPtn_zA" name="isIdentity" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jB3onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ1jCHonEeS9Gr9yPtn_zA" name="inverse" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jCXonEeS9Gr9yPtn_zA" type="_fJ1jA3onEeS9Gr9yPtn_zA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ1jCnonEeS9Gr9yPtn_zA" name="convert" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jC3onEeS9Gr9yPtn_zA" type="_fJdIgHonEeS9Gr9yPtn_zA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ1jDHonEeS9Gr9yPtn_zA" name="value" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ7poHonEeS9Gr9yPtn_zA" name="concatenate" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7poXonEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7pononEeS9Gr9yPtn_zA" name="converter" type="_f8JI0HY5EeSqtc-Sb9aJnA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ7po3onEeS9Gr9yPtn_zA" name="equals" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7ppHonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7ppXonEeS9Gr9yPtn_zA" name="cvtr" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ7ppnonEeS9Gr9yPtn_zA" name="hashCode" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7pp3onEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fJ7pqHonEeS9Gr9yPtn_zA" name="isLinear" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fJ7pqXonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
            </nestedClassifier>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_fJ7pqnonEeS9Gr9yPtn_zA" name="Pair" visibility="private" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fJ7pq3onEeS9Gr9yPtn_zA">
                <body>
     * This class represents converters made up of two or more separate
     * converters (in matrix notation &lt;code>[pair] = [left] x [right]&lt;/code>).
     </body>
              </ownedComment>
              <generalization xmi:type="uml:Generalization" xmi:id="_fJ7prHonEeS9Gr9yPtn_zA" general="_fJXB4HonEeS9Gr9yPtn_zA"/>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_fKBwQHonEeS9Gr9yPtn_zA" name="left" visibility="private" type="_f8JI0HY5EeSqtc-Sb9aJnA" isUnique="false">
                <ownedComment xmi:type="uml:Comment" xmi:id="_fKBwQXonEeS9Gr9yPtn_zA">
                  <body>
         * Holds the first converter.
         </body>
                </ownedComment>
              </ownedAttribute>
              <ownedAttribute xmi:type="uml:Property" xmi:id="_fKBwQnonEeS9Gr9yPtn_zA" name="right" visibility="private" type="_f8JI0HY5EeSqtc-Sb9aJnA" isUnique="false">
                <ownedComment xmi:type="uml:Comment" xmi:id="_fKBwQ3onEeS9Gr9yPtn_zA">
                  <body>
         * Holds the second converter.
         </body>
                </ownedComment>
              </ownedAttribute>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKBwRHonEeS9Gr9yPtn_zA" name="isLinear" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKBwRXonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKBwRnonEeS9Gr9yPtn_zA" name="isIdentity" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKBwR3onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKBwSHonEeS9Gr9yPtn_zA" name="getConversionSteps" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKBwSXonEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fKBwSnonEeS9Gr9yPtn_zA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fKH24HonEeS9Gr9yPtn_zA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKH24XonEeS9Gr9yPtn_zA" name="inverse" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH24nonEeS9Gr9yPtn_zA" type="_fJ7pqnonEeS9Gr9yPtn_zA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKH243onEeS9Gr9yPtn_zA" name="convert" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH25HonEeS9Gr9yPtn_zA" type="_fJdIgHonEeS9Gr9yPtn_zA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH25XonEeS9Gr9yPtn_zA" name="value" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKH25nonEeS9Gr9yPtn_zA" name="equals" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH253onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH26HonEeS9Gr9yPtn_zA" name="cvtr" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKH26XonEeS9Gr9yPtn_zA" name="hashCode" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKH26nonEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_fJXB43onEeS9Gr9yPtn_zA" name="function">
            <packagedElement xmi:type="uml:Interface" xmi:id="_fJXB5HonEeS9Gr9yPtn_zA" name="Converter"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Cr7tEHopEeSXuJ3Xp8vEhA" name="QuantitySupplier">
              <ownedComment xmi:type="uml:Comment" xmi:id="_Xc2h0HoqEeSXuJ3Xp8vEhA" annotatedElement="_Cr7tEHopEeSXuJ3Xp8vEhA">
                <ownedComment xmi:type="uml:Comment" xmi:id="_bQCfkHoqEeSXuJ3Xp8vEhA" annotatedElement="_Xc2h0HoqEeSXuJ3Xp8vEhA">
                  <body>FunctionalInterface</body>
                </ownedComment>
                <body>FunctionalInterface</body>
              </ownedComment>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_CsBzsHopEeSXuJ3Xp8vEhA" name="getQuantity">
                <ownedComment xmi:type="uml:Comment" xmi:id="_CsBzsXopEeSXuJ3Xp8vEhA">
                  <body>
	 * Gets a quantity.
	 *
	 * @return a quantity
	 </body>
                </ownedComment>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_CsBzsnopEeSXuJ3Xp8vEhA" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Usage" xmi:id="_dqhacHopEeSXuJ3Xp8vEhA" name="quantity" client="_Cr7tEHopEeSXuJ3Xp8vEhA" supplier="_CgTrQ3WcEeSrSaxu8IGQmg"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ommwsXotEeSXuJ3Xp8vEhA" name="MinimumSupplier"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ommws3otEeSXuJ3Xp8vEhA" name="MaximumSupplier"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_fJvcaXonEeS9Gr9yPtn_zA" name="Number"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_fKN9gHonEeS9Gr9yPtn_zA" name="AbstractMeasurement" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_fKN9gXonEeS9Gr9yPtn_zA">
              <body>
 * &lt;p>
 * This class represents the immutable result of a measurement stated in a known
 * quantity.
 * &lt;/p>
 * 
 * &lt;p>
 * All instances of this class shall be immutable.
 * &lt;/p>
 * 
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.1, $Date: 2014-11-29 $
 </body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fKN9hHonEeS9Gr9yPtn_zA" name="quantity" visibility="private" isLeaf="true" type="_CgTrQ3WcEeSrSaxu8IGQmg" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fKN9hXonEeS9Gr9yPtn_zA" name="timestamp" visibility="private" isLeaf="true" type="_f7F_9HY5EeSqtc-Sb9aJnA" isUnique="false"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fKN9g3onEeS9Gr9yPtn_zA" name="AbstractMeasurement implements Measurement" client="_fKN9gHonEeS9Gr9yPtn_zA" supplier="_fKN9gnonEeS9Gr9yPtn_zA" contract="_fKN9gnonEeS9Gr9yPtn_zA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKUEIHonEeS9Gr9yPtn_zA" name="getQuantity" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKUEIXonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the measurement quantity.
	 *
	 * @return the quantity.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEInonEeS9Gr9yPtn_zA" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKUEI3onEeS9Gr9yPtn_zA" name="getTimestamp" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKUEJHonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the measurement timestamp.
	 *
	 * @return the timestamp.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEJXonEeS9Gr9yPtn_zA" type="_f7F_9HY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKUEJnonEeS9Gr9yPtn_zA" name="of" isLeaf="true" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEJ3onEeS9Gr9yPtn_zA" type="_fKN9gnonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEKHonEeS9Gr9yPtn_zA" name="q" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKUEKXonEeS9Gr9yPtn_zA" name="of" isLeaf="true" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEKnonEeS9Gr9yPtn_zA" type="_fKN9gnonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKUEK3onEeS9Gr9yPtn_zA" name="q" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKaKwHonEeS9Gr9yPtn_zA" name="t" type="_f7F_9HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fMICAHonEeS9Gr9yPtn_zA" name="getTimestamp"/>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_fKaKwXonEeS9Gr9yPtn_zA" name="Default" visibility="private" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKaKwnonEeS9Gr9yPtn_zA">
                <body>
	 * This class represents the default measurement.
	 </body>
              </ownedComment>
              <generalization xmi:type="uml:Generalization" xmi:id="_fKaKw3onEeS9Gr9yPtn_zA" general="_fKN9gHonEeS9Gr9yPtn_zA"/>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_fKaKxHonEeS9Gr9yPtn_zA" name="compareTo" visibility="public">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKaKxXonEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKaKxnonEeS9Gr9yPtn_zA" name="o" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_fKN9gnonEeS9Gr9yPtn_zA" name="Measurement">
            <ownedComment xmi:type="uml:Comment" xmi:id="_fL70wXonEeS9Gr9yPtn_zA">
              <body>
 *
 * A Measurement contains a {@link Quantity} and a timestamp.
 * 
 * &lt;p>
 * A {@code Measurement} object is used for maintaining the tuple of quantity and timestamp.
 * The value is represented as {@linkplain Quantity}
 * and the time as {@linkplain Instant}
 * &lt;p>

 * 
 * @see {@link QuantitySupplier}
 * @author werner
 * @version 0.3
 * @param &lt;Q>
 </body>
            </ownedComment>
            <generalization xmi:type="uml:Generalization" xmi:id="_fL70xHonEeS9Gr9yPtn_zA" general="_fKgRY3onEeS9Gr9yPtn_zA"/>
            <generalization xmi:type="uml:Generalization" xmi:id="_VTs5cHopEeSXuJ3Xp8vEhA" general="_Cr7tEHopEeSXuJ3Xp8vEhA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fL70xXonEeS9Gr9yPtn_zA" name="getTimestamp">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fL70xnonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the timestamp of this {@link Measurement}.
	 * 
	 * @return a timestamp.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fMOIoHonEeS9Gr9yPtn_zA" type="_f7F_9HY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_fKgRYHonEeS9Gr9yPtn_zA" name="AbstractQuantity" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_fKgRYXonEeS9Gr9yPtn_zA">
              <body>
 * &lt;p>
 * This class represents the immutable result of a scalar measurement stated in
 * a known unit.
 * &lt;/p>
 * 
 * &lt;p>
 * &lt;code>
 *         public static final Quantity&lt;Velocity> C = AbstractQuantity.of(&quot;299792458 m/s&quot;).asType(Velocity.class);
 *         // Speed of Light (exact).
 *    &lt;/code>
 * &lt;/p>
 * 
 * &lt;p>
 * Quantities can be converted to different units.&lt;br/>
 * &lt;code>
 *         Quantity&lt;Velocity> milesPerHour = C.to(MILES_PER_HOUR); // Use double implementation (fast).
 *         System.out.println(milesPerHour);
 * 
 *         > 670616629.3843951 m/h
 *     &lt;/code>
 * &lt;/p>
 * 
 * &lt;p>
 * Applications may sub-class {@link AbstractQuantity} for particular quantity
 * types.&lt;br/>
 * &lt;code>
 *         // Quantity of type Mass based on &lt;code>double&lt;/code> primitive
 * types.&lt;br>
 * public class MassAmount extends AbstractQuantity&lt;Mass> {&lt;br>
 * private final double kilograms; // Internal SI representation.&lt;br>
 * private Mass(double kg) { kilograms = kg; }&lt;br>
 * public static Mass of(double value, Unit&lt;Mass> unit) {&lt;br>
 * return new Mass(unit.getConverterTo(SI.KILOGRAM).convert(value));&lt;br>
 * }&lt;br>
 * public Unit&lt;Mass> getUnit() { return SI.KILOGRAM; }&lt;br>
 * public Double getValue() { return _kilograms; }&lt;br>
 * ...&lt;br>
 * }&lt;br>
 * &lt;/p>
 * &lt;p>
 * // Complex numbers measurements.&lt;br>
 * public class ComplexQuantity
 * &lt;Q extends Quantity>extends AbstractQuantity
 * &lt;Q>{&lt;br>
 * public Complex getValue() { ... } // Assuming Complex is a Number.&lt;br>
 * ...&lt;br>
 * }&lt;br>
 * &lt;br>
 * // Specializations of complex numbers measurements.&lt;br>
 * public final class Current extends ComplexQuantity&lt;ElectricCurrent> {...}&lt;br>
 * public final class Tension extends ComplexQuantity&lt;ElectricPotential> {...}&lt;br>
 * &lt;/code>
 * &lt;/p>
 * 
 * &lt;p>
 * All instances of this class shall be immutable.
 * &lt;/p>
 * 
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.6.2, $Date: 2014-11-02 $
 </body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fKgRZXonEeS9Gr9yPtn_zA" name="unit" visibility="private" isLeaf="true" type="_f7Zh8HY5EeSqtc-Sb9aJnA" isUnique="false"/>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fKgRZnonEeS9Gr9yPtn_zA" name="NONE" visibility="public" isLeaf="true" isStatic="true" type="_fKgRYHonEeS9Gr9yPtn_zA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKgRZ3onEeS9Gr9yPtn_zA">
                <body>
	 * Holds a dimensionless quantity of none (exact).
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fKmYAHonEeS9Gr9yPtn_zA" name="ONE" visibility="public" isLeaf="true" isStatic="true" type="_fKgRYHonEeS9Gr9yPtn_zA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKmYAXonEeS9Gr9yPtn_zA">
                <body>
	 * Holds a dimensionless quantity of one (exact).
	 </body>
              </ownedComment>
            </ownedAttribute>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fKgRYnonEeS9Gr9yPtn_zA" name="AbstractQuantity implements Quantity" client="_fKgRYHonEeS9Gr9yPtn_zA" supplier="_CgTrQ3WcEeSrSaxu8IGQmg" contract="_CgTrQ3WcEeSrSaxu8IGQmg"/>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fKgRZHonEeS9Gr9yPtn_zA" name="AbstractQuantity implements Comparable" client="_fKgRYHonEeS9Gr9yPtn_zA" supplier="_fKgRY3onEeS9Gr9yPtn_zA" contract="_fKgRY3onEeS9Gr9yPtn_zA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKmYAnonEeS9Gr9yPtn_zA" name="getValue" visibility="public" isAbstract="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKmYA3onEeS9Gr9yPtn_zA">
                <body>
	 * Returns the measurement numeric value.
	 *
	 * @return the measurement value.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKmYBHonEeS9Gr9yPtn_zA" type="_fJvcaXonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKmYBXonEeS9Gr9yPtn_zA" name="getUnit" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKmYBnonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the measurement unit.
	 *
	 * @return the measurement unit.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKmYB3onEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKmYCHonEeS9Gr9yPtn_zA" name="toSI" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKmYCXonEeS9Gr9yPtn_zA">
                <body>
	 * Convenient method equivalent to {@link #to(javax.measure.unit.Unit)
	 * to(this.getUnit().toSI())}.
	 *
	 * @return this measure or a new measure equivalent to this measure but
	 *         stated in SI units.
	 * @throws ArithmeticException
	 *             if the result is inexact and the quotient has a
	 *             non-terminating decimal expansion.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKmYCnonEeS9Gr9yPtn_zA" type="_fKgRYHonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKmYC3onEeS9Gr9yPtn_zA" name="to" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKmYDHonEeS9Gr9yPtn_zA">
                <body>
	 * Returns this measure after conversion to specified unit. The default
	 * implementation returns
	 * &lt;code>Measure.valueOf(doubleValue(unit), unit)&lt;/code>. If this measure is
	 * already stated in the specified unit, then this measure is returned and
	 * no conversion is performed.
	 *
	 * @param unit
	 *            the unit in which the returned measure is stated.
	 * @return this measure or a new measure equivalent to this measure but
	 *         stated in the specified unit.
	 * @throws ArithmeticException
	 *             if the result is inexact and the quotient has a
	 *             non-terminating decimal expansion.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKmYDXonEeS9Gr9yPtn_zA" type="_fKgRYHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKseoHonEeS9Gr9yPtn_zA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKseoXonEeS9Gr9yPtn_zA" name="compareTo" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKseononEeS9Gr9yPtn_zA">
                <body>
	 * Compares this measure to the specified Measurement quantity. The default
	 * implementation compares the {@link AbstractQuantity#doubleValue(Unit)} of both
	 * this measure and the specified Measurement stated in the same unit (this
	 * measure's {@link #getUnit() unit}).
	 *
	 * @return a negative integer, zero, or a positive integer as this measure
	 *         is less than, equal to, or greater than the specified Measurement
	 *         quantity.
	 * @return &lt;code>Double.compare(this.doubleValue(getUnit()),
	 *         that.doubleValue(getUnit()))&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKseo3onEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKsepHonEeS9Gr9yPtn_zA" name="that" type="_CgTrQ3WcEeSrSaxu8IGQmg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKsepXonEeS9Gr9yPtn_zA" name="equals" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKsepnonEeS9Gr9yPtn_zA">
                <body>
	 * Compares this measure against the specified object for &lt;b>strict&lt;/b>
	 * equality (same unit and same amount).
	 *
	 * &lt;p>
	 * Similarly to the {@link BigDecimal#equals} method which consider 2.0 and
	 * 2.00 as different objects because of different internal scales,
	 * measurements such as &lt;code>Measure.valueOf(3.0, KILOGRAM)&lt;/code>
	 * &lt;code>Measure.valueOf(3, KILOGRAM)&lt;/code> and
	 * &lt;code>Quantities.getQuantity(&quot;3 kg&quot;)&lt;/code> might not be considered equals
	 * because of possible differences in their implementations.
	 * &lt;/p>
	 *
	 * &lt;p>
	 * To compare measures stated using different units or using different
	 * amount implementations the {@link #compareTo compareTo} or
	 * {@link #equals(javax.measure.Measurement, double, javax.measure.unit.Unit)
	 * equals(Measurement, epsilon, epsilonUnit)} methods should be used.
	 * &lt;/p>
	 *
	 * @param obj
	 *            the object to compare with.
	 * @return &lt;code>this.getUnit.equals(obj.getUnit())
	 *         &amp;&amp; this.getValue().equals(obj.getValue())&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKsep3onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKseqHonEeS9Gr9yPtn_zA" name="obj" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKseqXonEeS9Gr9yPtn_zA" name="equals" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKseqnonEeS9Gr9yPtn_zA">
                <body>
	 * Compares this measure and the specified Measurement to the given
	 * accuracy. Measurements are considered approximately equals if their
	 * absolute differences when stated in the same specified unit is less than
	 * the specified epsilon.
	 *
	 * @param that
	 *            the Measurement to compare with.
	 * @param epsilon
	 *            the absolute error stated in epsilonUnit.
	 * @param epsilonUnit
	 *            the epsilon unit.
	 * @return &lt;code>abs(this.doubleValue(epsilonUnit) - that.doubleValue(epsilonUnit)) &amp;lt;= epsilon&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKseq3onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKserHonEeS9Gr9yPtn_zA" name="that" type="_fKgRYHonEeS9Gr9yPtn_zA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKserXonEeS9Gr9yPtn_zA" name="epsilon" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKsernonEeS9Gr9yPtn_zA" name="epsilonUnit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKylQHonEeS9Gr9yPtn_zA" name="hashCode" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKylQXonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the hash code for this measure.
	 *
	 * @return the hash code value.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylQnonEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKylQ3onEeS9Gr9yPtn_zA" name="isBig" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylRHonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKylRXonEeS9Gr9yPtn_zA" name="toString" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fKylRnonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the &lt;code>String&lt;/code> representation of this measure. The
	 * string produced for a given measure is always the same; it is not
	 * affected by locale. This means that it can be used as a canonical string
	 * representation for exchanging measure, or as a key for a Hashtable, etc.
	 * Locale-sensitive measure formatting and parsing is handled by the
	 * {@link MeasurementFormat} class and its subclasses.
	 *
	 * @return &lt;code>UnitFormat.getInternational().format(this)&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylR3onEeS9Gr9yPtn_zA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKylSHonEeS9Gr9yPtn_zA" name="doubleValue" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylSXonEeS9Gr9yPtn_zA" type="_fJdIgHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylSnonEeS9Gr9yPtn_zA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fKylS3onEeS9Gr9yPtn_zA" name="longValue" visibility="protected">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylTHonEeS9Gr9yPtn_zA" type="_f7F_9HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fKylTXonEeS9Gr9yPtn_zA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fK4r4HonEeS9Gr9yPtn_zA" name="floatValue" visibility="protected">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fK4r4nonEeS9Gr9yPtn_zA" type="_fK4r4XonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fK4r43onEeS9Gr9yPtn_zA" name="unit" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fK4r5HonEeS9Gr9yPtn_zA" name="asType" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fK4r5XonEeS9Gr9yPtn_zA">
                <body>
	 * Casts this quantity to a parameterized unit of specified nature or throw a
	 * &lt;code>ClassCastException&lt;/code> if the dimension of the specified
	 * quantity and this measure unit's dimension do not match. For example:&lt;br/>
	 * &lt;code>
	 *     Measure&lt;Length> length = Quantities.getQuantity(&quot;2 km&quot;).asType(Length.class);
	 * &lt;/code>
	 *
	 * @param type
	 *            the quantity class identifying the nature of the quantity.
	 * @return this quantity parameterized with the specified type.
	 * @throws ClassCastException
	 *             if the dimension of this unit is different from the specified
	 *             quantity dimension.
	 * @throws UnsupportedOperationException
	 *             if the specified quantity class does not have a public static
	 *             field named &quot;UNIT&quot; holding the SI unit for the quantity.
	 * @see Unit#asType(Class)
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fK4r5nonEeS9Gr9yPtn_zA" type="_fKgRYHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fK4r53onEeS9Gr9yPtn_zA" name="type" type="_Cgf4hnWcEeSrSaxu8IGQmg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_Q6NP0H7uEeS9_eVxvq6Zqg" name="add">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q6NP0X7uEeS9_eVxvq6Zqg" type="_CgTrQ3WcEeSrSaxu8IGQmg" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q6NP0n7uEeS9_eVxvq6Zqg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q6TWcH7uEeS9_eVxvq6Zqg" value="1"/>
              </ownedParameter>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_Q6TWcX7uEeS9_eVxvq6Zqg" name="augend" type="_CgTrQ3WcEeSrSaxu8IGQmg">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Q6TWcn7uEeS9_eVxvq6Zqg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Q6TWc37uEeS9_eVxvq6Zqg" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_fKgRY3onEeS9Gr9yPtn_zA" name="Comparable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_fLK_wHonEeS9Gr9yPtn_zA" name="AbstractUnit" isAbstract="true">
            <ownedComment xmi:type="uml:Comment" xmi:id="_fLK_wXonEeS9Gr9yPtn_zA">
              <body>
 * &lt;p>
 * The class represents units founded on the seven
 * {@link org.org.unitsofmeasurement.impl.system.SI SI} base units for seven
 * base quantities assumed to be mutually independent.
 * &lt;/p>
 *
 * &lt;p>
 * For all physics units, units conversions are symmetrical:
 * &lt;code>u1.getConverterTo(u2).equals(u2.getConverterTo(u1).inverse())&lt;/code>.
 * Non-physical units (e.g. currency units) for which conversion is not
 * symmetrical should have their own separate class hierarchy and are considered
 * distinct (e.g. financial units), although they can always be combined with
 * physics units (e.g. &quot;â‚¬/Kg&quot;, &quot;$/h&quot;).
 * &lt;/p>
 *
 * @author &lt;a href=&quot;mailto:jean-marie@dautelle.com&quot;>Jean-Marie Dautelle&lt;/a>
 * @author &lt;a href=&quot;mailto:units@catmedia.us&quot;>Werner Keil&lt;/a>
 * @version 0.8.2, Nov 15, 2014
 </body>
            </ownedComment>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fLK_w3onEeS9Gr9yPtn_zA" name="ONE" visibility="public" isLeaf="true" isStatic="true" type="_fLK_wHonEeS9Gr9yPtn_zA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLK_xHonEeS9Gr9yPtn_zA">
                <body>
	 * Holds the dimensionless unit &lt;code>ONE&lt;/code>.
	 </body>
              </ownedComment>
            </ownedAttribute>
            <ownedAttribute xmi:type="uml:Property" xmi:id="_fLK_xXonEeS9Gr9yPtn_zA" name="name" visibility="protected" type="_f7ir43Y5EeSqtc-Sb9aJnA" isUnique="false">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLK_xnonEeS9Gr9yPtn_zA">
                <body>
	 * Holds the name.
	 </body>
              </ownedComment>
            </ownedAttribute>
            <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_fLK_wnonEeS9Gr9yPtn_zA" name="AbstractUnit implements Unit" client="_fLK_wHonEeS9Gr9yPtn_zA" supplier="_f7Zh8HY5EeSqtc-Sb9aJnA" contract="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLK_x3onEeS9Gr9yPtn_zA" name="isSystemUnit" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLK_yHonEeS9Gr9yPtn_zA">
                <body>
	 * Indicates if this unit belongs to the set of coherent SI units (unscaled
	 * SI units).
	 * 
	 * The base and coherent derived units of the SI form a coherent set,
	 * designated the set of coherent SI units. The word coherent is used here
	 * in the following sense: when coherent units are used, equations between
	 * the numerical values of quantities take exactly the same form as the
	 * equations between the quantities themselves. Thus if only units from a
	 * coherent set are used, conversion factors between units are never
	 * required.
	 * 
	 * @return &lt;code>equals(toSystemUnit())&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLK_yXonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLK_ynonEeS9Gr9yPtn_zA" name="toSystemUnit" visibility="protected" isAbstract="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLRGYHonEeS9Gr9yPtn_zA">
                <body xsi:nil="true"/>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLRGYXonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLRGYnonEeS9Gr9yPtn_zA" name="getConverterToSI" visibility="public" isAbstract="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLRGY3onEeS9Gr9yPtn_zA">
                <body>
	 * Returns the converter from this unit to its unscaled {@link #toSI SI}
	 * unit.
	 *
	 * @return &lt;code>getConverterTo(this.toSI())&lt;/code>
	 * @see #toSI
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLRGZHonEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLRGZXonEeS9Gr9yPtn_zA" name="annotate" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLRGZnonEeS9Gr9yPtn_zA">
                <body xsi:nil="true"/>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLRGaXonEeS9Gr9yPtn_zA" type="_fLRGaHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLRGanonEeS9Gr9yPtn_zA" name="annotation" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLRGbHonEeS9Gr9yPtn_zA" name="parse" visibility="public" isStatic="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLRGbXonEeS9Gr9yPtn_zA">
                <body xsi:nil="true"/>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLRGbnonEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNAHonEeS9Gr9yPtn_zA" name="charSequence" type="_fLRGa3onEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLXNAXonEeS9Gr9yPtn_zA" name="toString" visibility="public">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLXNAnonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the standard &lt;a href=&quot;http://unitsofmeasure.org/&quot;>UCUM&lt;/a>
	 * representation of this physics unit. The string produced for a given unit
	 * is always the same; it is not affected by the locale. It can be used as a
	 * canonical string representation for exchanging units, or as a key for a
	 * Hashtable, etc.
	 *
	 * Locale-sensitive unit parsing should be handled using the OSGi
	 * {@link org.unitsofmeasurement.service.UnitFormat} service (or the
	 * {@link LocalUnitFormat} class for non-OSGi applications).
	 *
	 * @return &lt;code>UCUMFormat.getCaseSensitiveInstance().format(this)&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNA3onEeS9Gr9yPtn_zA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLXNBHonEeS9Gr9yPtn_zA" name="getSystemUnit" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLXNBXonEeS9Gr9yPtn_zA">
                <body xsi:nil="true"/>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNBnonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLXNB3onEeS9Gr9yPtn_zA" name="isCompatible" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLXNCHonEeS9Gr9yPtn_zA">
                <body>
	 * Indicates if this unit is compatible with the unit specified. To be
	 * compatible both units must be physics units having the same fundamental
	 * dimension.
	 *
	 * @param that
	 *            the other unit.
	 * @return &lt;code>true&lt;/code> if this unit and that unit have equals
	 *         fundamental dimension according to the current physics model;
	 *         &lt;code>false&lt;/code> otherwise.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNCXonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNCnonEeS9Gr9yPtn_zA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLXNC3onEeS9Gr9yPtn_zA" name="asType" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLXNDHonEeS9Gr9yPtn_zA">
                <body>
	 * Casts this unit to a parameterized unit of specified nature or throw a
	 * ClassCastException if the dimension of the specified quantity and this
	 * unit's dimension do not match (regardless whether or not the dimensions
	 * are independent or not).
	 *
	 * @param type
	 *            the quantity class identifying the nature of the unit.
	 * @throws ClassCastException
	 *             if the dimension of this unit is different from the
	 *             {@link SI} dimension of the specified type.
	 * @see SI#getUnit(Class)
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLXNDXonEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdToHonEeS9Gr9yPtn_zA" name="type" type="_Cgf4hnWcEeSrSaxu8IGQmg"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdToXonEeS9Gr9yPtn_zA" name="getBaseUnits" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTononEeS9Gr9yPtn_zA" type="_f682CnY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdTo3onEeS9Gr9yPtn_zA" name="getDimension" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTpHonEeS9Gr9yPtn_zA" type="_f6zFAHY5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdTpXonEeS9Gr9yPtn_zA" name="setName" visibility="protected">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTpnonEeS9Gr9yPtn_zA" name="name" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdTp3onEeS9Gr9yPtn_zA" name="getName" visibility="public">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTqHonEeS9Gr9yPtn_zA" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdTqXonEeS9Gr9yPtn_zA" name="getConverterTo" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTqnonEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLdTq3onEeS9Gr9yPtn_zA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLdTrHonEeS9Gr9yPtn_zA" name="getConverterToAny" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaQHonEeS9Gr9yPtn_zA" type="_f8JI0HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaQXonEeS9Gr9yPtn_zA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLjaQnonEeS9Gr9yPtn_zA" name="alternate" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaQ3onEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaRHonEeS9Gr9yPtn_zA" name="symbol" type="_f7ir43Y5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLjaRXonEeS9Gr9yPtn_zA" name="transform" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaRnonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaR3onEeS9Gr9yPtn_zA" name="operation" type="_f8JI0HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLjaSHonEeS9Gr9yPtn_zA" name="shift" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaSXonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLjaSnonEeS9Gr9yPtn_zA" name="offset" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLjaS3onEeS9Gr9yPtn_zA" name="multiply" visibility="public" isLeaf="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg4HonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg4XonEeS9Gr9yPtn_zA" name="factor" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLpg4nonEeS9Gr9yPtn_zA" name="isLongValue" visibility="private" isStatic="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg43onEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg5HonEeS9Gr9yPtn_zA" name="value" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLpg5XonEeS9Gr9yPtn_zA" name="multiply" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLpg5nonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the product of this unit with the one specified.
	 *
	 * &lt;p>
	 * Note: If the specified unit (that) is not a physical unit, then
	 * &lt;code>that.multiply(this)&lt;/code> is returned.
	 * &lt;/p>
	 *
	 * @param that
	 *            the unit multiplicand.
	 * @return &lt;code>this * that&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg53onEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg6HonEeS9Gr9yPtn_zA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLpg6XonEeS9Gr9yPtn_zA" name="multiply" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLpg6nonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the product of this physical unit with the one specified.
	 *
	 * @param that
	 *            the physical unit multiplicand.
	 * @return &lt;code>this * that&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg63onEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLpg7HonEeS9Gr9yPtn_zA" name="that" type="_fLK_wHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLvngHonEeS9Gr9yPtn_zA" name="inverse" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLvngXonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the inverse of this physical unit.
	 *
	 * @return &lt;code>1 / this&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvngnonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLvng3onEeS9Gr9yPtn_zA" name="divide" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLvnhHonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the result of dividing this unit by the specifified divisor. If
	 * the factor is an integer value, the division is exact. For example:
	 * 
	 * &lt;pre>
	 * &lt;code>
	 *    QUART = GALLON_LIQUID_US.divide(4); // Exact definition.
	 * &lt;/code>
	 * &lt;/pre>
	 * 
	 * @param divisor
	 *            the divisor value.
	 * @return this unit divided by the specified divisor.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvnhXonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvnhnonEeS9Gr9yPtn_zA" name="divisor" type="_fJdIgHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLvnh3onEeS9Gr9yPtn_zA" name="divide" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLvniHonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the quotient of this unit with the one specified.
	 *
	 * @param that
	 *            the unit divisor.
	 * @return &lt;code>this.multiply(that.inverse())&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvniXonEeS9Gr9yPtn_zA" type="_f7Zh8HY5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvninonEeS9Gr9yPtn_zA" name="that" type="_f7Zh8HY5EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fLvni3onEeS9Gr9yPtn_zA" name="divide" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fLvnjHonEeS9Gr9yPtn_zA">
                <body>
	 * Returns the quotient of this physical unit with the one specified.
	 *
	 * @param that
	 *            the physical unit divisor.
	 * @return &lt;code>this.multiply(that.inverse())&lt;/code>
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fLvnjXonEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uIHonEeS9Gr9yPtn_zA" name="that" type="_fLK_wHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fL1uIXonEeS9Gr9yPtn_zA" name="root" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fL1uInonEeS9Gr9yPtn_zA">
                <body>
	 * Returns a unit equals to the given root of this unit.
	 *
	 * @param n
	 *            the root's order.
	 * @return the result of taking the given root of this unit.
	 * @throws ArithmeticException
	 *             if &lt;code>n == 0&lt;/code> or if this operation would result in
	 *             an unit with a fractional exponent.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uI3onEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uJHonEeS9Gr9yPtn_zA" name="n" type="_N70hjXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fL1uJXonEeS9Gr9yPtn_zA" name="pow" visibility="public" isLeaf="true">
              <ownedComment xmi:type="uml:Comment" xmi:id="_fL1uJnonEeS9Gr9yPtn_zA">
                <body>
	 * Returns a unit equals to this unit raised to an exponent.
	 *
	 * @param n
	 *            the exponent.
	 * @return the result of raising this unit to the exponent.
	 </body>
              </ownedComment>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uJ3onEeS9Gr9yPtn_zA" type="_fLK_wHonEeS9Gr9yPtn_zA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uKHonEeS9Gr9yPtn_zA" name="n" type="_N70hjXY6EeSqtc-Sb9aJnA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fL1uKXonEeS9Gr9yPtn_zA" name="hashCode" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uKnonEeS9Gr9yPtn_zA" type="_N70hjXY6EeSqtc-Sb9aJnA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_fL1uK3onEeS9Gr9yPtn_zA" name="equals" visibility="public" isAbstract="true">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL1uLHonEeS9Gr9yPtn_zA" type="_f7ir83Y5EeSqtc-Sb9aJnA" direction="return"/>
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_fL70wHonEeS9Gr9yPtn_zA" name="that" type="_fJpVxHonEeS9Gr9yPtn_zA"/>
            </ownedOperation>
            <ownedOperation xmi:type="uml:Operation" xmi:id="_-mzJ4H7tEeS9_eVxvq6Zqg" name="getSymbol">
              <ownedParameter xmi:type="uml:Parameter" xmi:id="_-m5QgH7tEeS9_eVxvq6Zqg" type="_f7ir43Y5EeSqtc-Sb9aJnA" direction="return">
                <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-m5QgX7tEeS9_eVxvq6Zqg" value="1"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-m5Qgn7tEeS9_eVxvq6Zqg" value="1"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_fLRGZ3onEeS9Gr9yPtn_zA" name="unit">
            <packagedElement xmi:type="uml:Class" xmi:id="_fLRGaHonEeS9Gr9yPtn_zA" name="AnnotatedUnit"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_fLRGa3onEeS9Gr9yPtn_zA" name="CharSequence"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_fJdIgHonEeS9Gr9yPtn_zA" name="Double"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_fK4r4XonEeS9Gr9yPtn_zA" name="Float"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_Cgf4g3WcEeSrSaxu8IGQmg" name="java">
    <packagedElement xmi:type="uml:Package" xmi:id="_Cgf4hHWcEeSrSaxu8IGQmg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_Cgf4hXWcEeSrSaxu8IGQmg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_Cgf4hnWcEeSrSaxu8IGQmg" name="Class"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_f682DnY5EeSqtc-Sb9aJnA" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_f7ir43Y5EeSqtc-Sb9aJnA" name="String"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CgZx5nWcEeSrSaxu8IGQmg" name="Number"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N79rcXY6EeSqtc-Sb9aJnA" name="CharSequence"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N79rfXY6EeSqtc-Sb9aJnA" name="Appendable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_fJpVxHonEeS9Gr9yPtn_zA" name="Object"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f682CXY5EeSqtc-Sb9aJnA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_f682CnY5EeSqtc-Sb9aJnA" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_f8SSxnY5EeSqtc-Sb9aJnA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Vi8OhHY7EeSqtc-Sb9aJnA" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_VjF_hXY7EeSqtc-Sb9aJnA" name="Locale"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_IY-GsHLtEeilgvRHPaOOsg" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_P7W6EHLtEeilgvRHPaOOsg" name="ParsePosition"/>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_f6zFCnY5EeSqtc-Sb9aJnA" name="datatype">
    <packagedElement xmi:type="uml:Package" xmi:id="_f6zFC3Y5EeSqtc-Sb9aJnA" name="datatype">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_f6zFDHY5EeSqtc-Sb9aJnA" name="int"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_f7F_9HY5EeSqtc-Sb9aJnA" name="long"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_f7ir83Y5EeSqtc-Sb9aJnA" name="boolean"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_f7sc7nY5EeSqtc-Sb9aJnA" name="double"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_N70hjXY6EeSqtc-Sb9aJnA" name="Integer"/>
    </packagedElement>
  </packagedElement>
</uml:Model>
